class Printer {
  message = 'This is works!';

  // @Autobind
  showMessage() {
    console.log(this.message);
  }
}

const p = new Printer();
const btn = document.querySelector('button')!;
btn.addEventListener('click', p.showMessage);

p.showMessage seperti yang kita tahu dia melakukan console.log this.message,
tapi yang terjadi adalah ketika menggunakan addEventListener konteks dari
this pada showMessage mengarah ke function addEventListener bukan ke object 
itu sendiri.

oleh karena kita akan harus melakukan bind

    btn.addEventListener('click', p.showMessage.bind(p));

agar si p.showMessage message paham bahwa konteks yang dimaksud dengan this adalah
dari objek p itu sendiri.

nah kita bakal biki decorator autobind nya.

function Autobind(_: any, _2: string, descriptor: PropertyDescriptor) {
  const originalMethod = descriptor.value;
  const adjDescriptor: PropertyDescriptor = {
    configurable: true,
    enumerable: false,
    get() {
      const boundFn = originalMethod.bind(this);
      return boundFn;
    }
  };
  return adjDescriptor;
};

class Printer {
  message = 'This is works!';

  @Autobind
  showMessage() {
    console.log(this.message);
  }
}

const p = new Printer();
const btn = document.querySelector('button')!;
btn.addEventListener('click', p.showMessage);