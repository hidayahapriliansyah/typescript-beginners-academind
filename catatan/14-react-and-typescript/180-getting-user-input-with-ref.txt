malah belajar useRef ... alhamdulillah rada paham ...

intinya pakai useRef itu biar apa ya? kayak bikin referensi element gitu.
intinya konteksnya element dulu.

contoh kode :
    import React, { useRef } from 'react';

    const NewTodo: React.FC = () => {
      const textInputRef = useRef<HTMLInputElement>(null);
      console.log('textInputRef before render');
      console.log(textInputRef); //  nah ini nilainya bakal { current: null }
      
      const todoSubmitHandler = (e: React.FormEvent) => {
        e.preventDefault();
        const enteredText = textInputRef.current!.value;
        console.log('textInputRef after render');
        console.log(textInputRef); // { current: input#todo-text }
        console.log(enteredText); // ini akan bernilai value dari input 
        // textInputRef.current!.focus();
        // bahkan kita pun bisa ngelakuin hal kayak nambahin fokus ke elemennya lewat ref ini.
        // ini mirip document.getelement intina mah.
      };

      return (
        <form onSubmit={todoSubmitHandler}>
          <div>
            <label htmlFor='todo-text'>Todo Text</label>
            <input type='text' id='todo-text' ref={textInputRef}/>
            // pada element input ini kita tambahin props ref, ini bukan attribut html yaa ..
            // ini dari react. jadi nanti setelah component input dirender
            // maka nilai textInputRef akan jadi { current: input#todo-text }
            // yang mana textInputRef sekarang mengambil referensi dari element input 
            // karena current dari textInputRef udah merupakan element input
            // maka kita bisa ngambil valuenya dari sana.
          </div>
          <button type='submit'>ADD TODO</button>
        </form>
      );
    };

    export default NewTodo;